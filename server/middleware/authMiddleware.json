// server/middleware/authMiddleware.js

import jwt from 'jsonwebtoken';

const authMiddleware = (req, res, next) => {
  const authHeader = req.headers.authorization;

  // Проверка наличия токена
  if (!authHeader || !authHeader.startsWith('Bearer ')) {
    return res.status(401).json({ message: 'Нет токена авторизации' });
  }

  const token = authHeader.split(' ')[1];

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    req.user = decoded; // Добавляем пользователя в запрос
    next(); // Передаём управление дальше
  } catch (err) {
    return res.status(403).json({ message: 'Неверный или просроченный токен' });
  }
};

export default authMiddleware;
